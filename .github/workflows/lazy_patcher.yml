name: Lazy Framework Patcher

on:
  workflow_dispatch:
    inputs:
      framework_url:
        description: 'URL to framework.jar (optional)'
        required: false
      services_url:
        description: 'URL to services.jar (optional)'
        required: false
      knoxsdk_url:
        description: 'URL to knoxsdk.jar (optional)'
        required: false
      keystoreutils_url:
        description: 'URL to samsungkeystoreutils.jar (optional)'
        required: false

env:
  ARTIFACT_DIR: patched_jars_${{ github.run_id }}
  BUILD_DATE: $(date -u +'%Y%m%d-%H%M')

jobs:
  validate:
    name: Validate Input
    runs-on: ubuntu-latest
    outputs:
      valid: ${{ steps.check-input.outputs.valid }}
    steps:
      - name: Check inputs
        id: check-input
        run: |
          if [[ -z "${{ inputs.framework_url }}" && -z "${{ inputs.services_url }}" && -z "${{ inputs.knoxsdk_url }}" && -z "${{ inputs.keystoreutils_url }}" ]]; then
            echo "::error::At least one JAR URL must be provided"
            echo "valid=false" >> $GITHUB_OUTPUT
          else
            echo "valid=true" >> $GITHUB_OUTPUT

  patch:
    name: Patch JARs
    needs: validate
    if: ${{ needs.validate.outputs.valid == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip wget
          echo "BUILD_DATE=$(date -u +'%Y%m%d-%H%M')" >> $GITHUB_ENV

      - name: Create directories
        run: |
          mkdir -p rom/system/system/framework
          mkdir -p "${{ env.ARTIFACT_DIR }}"

      - name: Download framework.jar
        if: ${{ inputs.framework_url != '' }}
        run: |
          echo "Downloading framework.jar..."
          wget -q --show-progress "${{ inputs.framework_url }}" -O rom/system/system/framework/framework.jar
          echo "Downloaded $(ls -lh rom/system/system/framework/framework.jar)"

      - name: Download services.jar
        if: ${{ inputs.services_url != '' }}
        run: |
          echo "Downloading services.jar..."
          wget -q --show-progress "${{ inputs.services_url }}" -O rom/system/system/framework/services.jar
          echo "Downloaded $(ls -lh rom/system/system/framework/services.jar)"

      - name: Download knoxsdk.jar
        if: ${{ inputs.knoxsdk_url != '' }}
        run: |
          echo "Downloading knoxsdk.jar..."
          wget -q --show-progress "${{ inputs.knoxsdk_url }}" -O rom/system/system/framework/knoxsdk.jar
          echo "Downloaded $(ls -lh rom/system/system/framework/knoxsdk.jar)"

      - name: Download samsungkeystoreutils.jar
        if: ${{ inputs.keystoreutils_url != '' }}
        run: |
          echo "Downloading samsungkeystoreutils.jar..."
          wget -q --show-progress "${{ inputs.keystoreutils_url }}" -O rom/system/system/framework/samsungkeystoreutils.jar
          echo "Downloaded $(ls -lh rom/system/system/framework/samsungkeystoreutils.jar)"

      - name: Make patcher executable
        run: chmod +x lazy_patcher.sh

      - name: Run patcher
        run: |
          ./lazy_patcher.sh rom
          echo "Patcher completed successfully"

      - name: Collect artifacts
        run: |
          cd "${{ env.ARTIFACT_DIR }}"
          
          for jar in framework services knoxsdk samsungkeystoreutils; do
            if [[ -f ../rom/system/system/framework/${jar}.jar ]]; then
              cp ../rom/system/system/framework/${jar}.jar "${jar}_patched_${{ env.BUILD_DATE }}.jar"
            fi
          done

          echo "Generated artifacts:"
          ls -lh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: patched-jars
          path: ${{ env.ARTIFACT_DIR }}/*.jar
          retention-days: 7
